//: A UIKit based Playground for presenting user interface
  
import UIKit
import PlaygroundSupport

class MyViewController : UIViewController {
    //–ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É
    let feedbackField = UITextField()
    //—Å—Ç–µ–ø–ø–µ—Ä (+/-)
    let stepper = UIStepper(frame: CGRect(x: 145, y: 520, width: 200, height: 44))
    //—Å–ª–∞–π–¥–µ—Ä
    let slider = UISlider(frame: CGRect(x: 90, y: 470, width: 200, height: 44))
    //–º–∞—Å–∏–≤ –≤—ñ–¥–≥—É–∫—ñ–≤ –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ —Ç–∞–±–ª–∏—Ü—é
    let arrayOfReviews = ["I like it!","That`s nice!","I cant believe it!","This one special to me!","Thanks Apple for service!","At start have problems with thatüòÖ","Cant believe this is real","Really like to work with it","Thanks Apple!","The best framework!!!"]
    // —Ç–∞–±–ª–∏—Ü—è
    let tableOfReviews = UITableView(frame: CGRect(x: 40, y: 200, width: 300, height: 150))
    override func loadView() {
        //–æ—Å–Ω–æ–≤–Ω–µ view
        let view = UIView()
        //–∑–∞–¥–∞–Ω–∏–π –∫–æ–ª—ñ—Ä
        view.backgroundColor = .white
        //–ª–µ–π–±–ª (—Ç–µ–∫—Å—Ç)
        let label = UILabel()
        //–∑–∞–¥–∞–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –ª–µ–π–±–ª—É
        label.frame = CGRect(x: 0, y: 0, width: 150, height: 150)
        //–∑–∞–¥–∞–≤ —Ç–µ–∫—Å—Ç—É –ª–µ–π–±–ª—É
        label.text = "UI Kit"
        // –∑–∞–¥–∞–≤ —à—Ä–∏—Ñ—Ç —ñ –≤–µ–ª–∏—á–∏–Ω—É –π–æ–≥–æ —ñ —Ç–∏–ø
        label.font = UIFont.systemFont(ofSize: 42, weight: .heavy)
        //–∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É
        label.textColor = .systemGreen
        // –≤–∏—Ä—ñ–≤–µ—é–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–æ —Ü–µ–Ω—Ç—Ä—É
        label.textAlignment = .center
        //–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ—ñ–≤ –≤ –ª–µ–π–±–ª—ñ
        label.numberOfLines = 1
        // –º–æ—î –¥–æ–¥–∞—Ç–∫–æ–≤–µ –≤'—é —ñ –∑—Ä–∞–∑—É –∑–∞–¥–∞–≤ –π–æ–º—É –ø–æ–∑–∏—Ü—ñ—é —ñ —Ä–æ–∑–º—ñ—Ä–∏
        let myView = UIView(frame: CGRect(x: 140, y: 140, width: 100, height: 100))
        //–∫–æ–ª—ñ—Ä –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤'—é
        myView.backgroundColor = .systemGreen
        //–ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ —Ä–æ–∑–º—ñ—Ä–∏ –≤ frame i bounds
        myView.frame
        myView.bounds
//–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —Ç—Ä–∞–Ω—Å–æ—Ñ—Ä–º —ñ –∑–∞–¥–∞–≤–∞ —ó–π –æ–±'—î–∫—Ç —Ç–∞–∫–æ–≥–æ —Ç–∏–ø—É —ñ –≤–∏–±—Ä–∞–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑ –∑–Ω–∞—á–µ–Ω–Ω—è rotationAngle —ñ –∑–∞–¥–∞–≤–∞ 45 –≥—Ä–∞–¥—É—Å—ñ–≤ –æ–±–æ—Ä–æ—Ç –¥–ª—è —Ç–æ–≥–æ —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è bounds –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç—ñ view
        myView.transform = CGAffineTransform(rotationAngle: CGFloat.pi/4)
        //–∑–∞–¥–∞–≤ —Ä–æ–∑–º—ñ—Ä–∏ –¥–ª—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
        feedbackField.frame = CGRect(x: 75, y: 400, width: 220, height: 42)
        //–∑–∞–¥–∞–≤ –∫–æ–ª—ñ—Ä –¥–ª—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è
        feedbackField.backgroundColor = .white
        //–∑–∞–¥–∞–≤ —Å—Ç–∏–ª—å —Ä–∞–º–∫–∏ –¥–ª—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è
        feedbackField.borderStyle = .roundedRect
        //–∑–∞–¥–∞–≤ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è
        feedbackField.placeholder = "Your feedback here!"
        // –∑–∞–¥–∞–≤ –≤–∏—Ä—ñ–≤–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–æ —Ü–µ–Ω—Ç—Ä—É –≤ –ø–æ–ª—ñ –≤–≤–µ–¥–µ–Ω–Ω—è
        feedbackField.textAlignment = .center
        //—Å—Ç–≤–æ—Ä–∏–≤ –∫–Ω–æ–ø–∫—É
        let feedbackbutton = UIButton()
        // –∑–∞–¥–∞–≤ —Ä–æ–∑–º—ñ—Ä–∏ –¥–ª—è –Ω–µ—ó
        feedbackbutton.frame = CGRect(x: 100, y: 570, width: 180, height: 44)
        // –∑–∞–¥–∞–≤ —ó–π –∫–æ–ª—ñ—Ä
        feedbackbutton.backgroundColor = .systemGreen
        //–∑–∞–¥–∞–≤ –Ω–∞–∑–≤—É –¥–ª—è –∫–Ω–æ–ø–∫–∏
        feedbackbutton.setTitle("Send Feedback", for: .normal)
        //–∫–æ–ª—ñ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç—É –≤ –∫–Ω–æ–ø—Ü—ñ
        feedbackbutton.tintColor = .white
        //–∑–∞–æ–∫—Ä—É–≥–ª–∏–≤ –∫–Ω–æ–ø–∫—É –ø–æ –∫—É—Ç–∞–º
        feedbackbutton.layer.cornerRadius = 22
        //—Å—Ç–≤–æ—Ä–∏–≤ —ñ–º–µ–π–¥–∂ –≤'—é —ñ –∑–∞–¥–∞–≤ —Ä–æ–∑–º—ñ—Ä–∏ –π–æ–º—É
        let backgroundImage = UIImageView(frame: CGRect(x: 0, y: 0, width: 400, height: 700))
        backgroundImage.image = UIImage(named: "background.jpeg")
       // –∑–∞–¥–∞–≤ –º—ñ–Ω —ñ –º–∞–∫—Å –∑–¥–∞—á–µ–Ω–Ω—è –¥–ª—è –∫—Ä–æ–∫—É –≤ —Å—Ç–µ–ø–ø–µ—Ä—ñ
        stepper.minimumValue = 0
        stepper.maximumValue = 10
        //–∑–∞–¥–∞–≤ –∫—Ä–æ–∫ –≤ —Å—Ç–µ–ø–µ—Ä—ñ
        stepper.stepValue = 1
        //—Ü–µ —Å—Ç—Ä—ñ—á–∫–∞ –≤–∏–∫–æ–Ω—É—î —Ñ—É–Ω–∫—Ü—ñ—é valueChanged –ø—Ä–∏ –Ω–∞–∂–∏–º–∞–Ω–Ω—ñ —Å—Ç–µ–ø–ø–µ—Ä–∞
        stepper.addTarget(self, action: #selector(valueChanged), for: .touchUpInside)
        //–∑–∞–¥–∞–≤ –º—ñ–Ω —ñ –º–∞–∫—Å –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
        slider.minimumValue = 0
        slider.maximumValue = 10
        //—Ü–µ —Å—Ç—Ä—ñ—á–∫–∞ –≤–∏–∫–æ–Ω—É—î —Ñ—É–Ω–∫—Ü—ñ—é valueChanged –ø—Ä–∏ –Ω–∞–∂–∏–º–∞–Ω–Ω—ñ —Å–ª–∞–π–¥–µ—Ä–∞
        slider.addTarget(self, action: #selector(slideValueChange), for: .touchUpInside)
        //–∑–∞–¥–∞–≤ —à–∏—Ä–∏–Ω—É —Ä–∞–º–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ
        tableOfReviews.layer.borderWidth = 2
        //  —ñ –∫–æ–ª—ñ—Ä –¥–ª—è —Ä–∞–º–∫–∏
        tableOfReviews.layer.borderColor = UIColor.green.cgColor
        // –∑–∞–¥–∞–≤ –¥–µ–ª–µ–≥–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ
        tableOfReviews.dataSource = self
        // —Å—Ç–≤–æ—Ä–∏–≤ –¥—Ä—É–≥–∏–π –ª–µ–π–±–ª
        let label2 = UILabel(frame: CGRect(x: 150, y: 125, width: 100, height: 100))
        //–∑–∞–¥–∞–≤ —Ç–µ–∫—Å—Ç –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ª–µ–π–±–ª—É
        label2.text = "Reviews"
        // –∑–∞–¥–∞–≤ —à—Ä–∏—Ñ—Ç –ª–µ–π–±–ª—É2
        label2.font = UIFont.systemFont(ofSize: 21, weight: .bold)
        // —ñ –∫–æ–ª—ñ—Ä
        label2.textColor = .white
        // –¥–æ–¥–∞—é –ø–æ —á–µ—Ä–∑—ñ —Å–∞–±–≤'—é –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≤'—é, —Ç–æ–±—Ç–æ –Ω–∞—à—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ —á–µ—Ä–∑—ñ
        view.addSubview(backgroundImage)
        view.addSubview(myView)
        view.addSubview(label)
        view.addSubview(feedbackField)
        view.addSubview(feedbackbutton)
        view.addSubview(stepper)
        view.addSubview(slider)
        view.addSubview(tableOfReviews)
        view.addSubview(label2)
        self.view = view
    }
    // —Ñ—É–Ω–∫—Ü—ñ—è –æ–±–¥–∂–µ–∫—Ç —Å—ñ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —è–∫—ñ–π –º—ñ–Ω—è—î—Ç—å—Å—è int –∑–Ω–∞—á–µ–Ω–Ω—è(—Ç–µ–∫—Å—Ç) –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–µ–Ω–Ω—è (text field) –ø—Ä–∏ –Ω–∞–∂–∏–º–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç–µ–ø–µ—Ä
    @objc func valueChanged(){
        feedbackField.text = String(Int(stepper.value))
    }
    // —Ñ—É–Ω–∫—Ü—ñ—è –æ–±–¥–∂–µ–∫—Ç —Å—ñ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —è–∫—ñ–π –º—ñ–Ω—è—î—Ç—å—Å—è float –∑–Ω–∞—á–µ–Ω–Ω—è(—Ç–µ–∫—Å—Ç) –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ –ø–æ–ª—è –≤–≤–µ–¥–µ–Ω–µ–Ω–Ω—è (text field) –ø—Ä–∏ –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —Å–ª–∞–π–¥–µ—Ä–æ–º
    @objc func slideValueChange(){
        feedbackField.text = String(slider.value)
    }
}
//—Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –Ω–∞—à–æ–≥–æ –∫–ª–∞—Å—É –¥–µ–ª–µ–≥–∞—Ç–æ–º UITableViewDataSource
extension MyViewController : UITableViewDataSource{
    //–ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        arrayOfReviews.count
    }
    //—Å—Ç–≤–æ—Ä—é—î –∫–æ–º—ñ—Ä–∫—É –≤ —Ç–∞–±–ª–∏—Ü—ñ —ñ —á–µ—Ä–µ–∑ indexPath.row –¥–æ–¥–∞—î –ø–æ —á–µ—Ä–∑—ñ –Ω–∞—à—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –º–∞—Å–∏–≤—É
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell(style: .subtitle, reuseIdentifier: "cell")
        cell.textLabel?.text = arrayOfReviews[indexPath.row]
        return cell
    }
    //–ó–ê–í–î–ê–ù–ù–Ø ‚Ññ2 –ë–£–õ–û –†–ï–ê–õ–Ü–ó–û–í–ê–ù–û –í –Ü–ù–®–û–ú–£ –ü–†–û–ï–ö–¢–Ü –î–ï –Ü –†–ï–ê–õ–Ü–ó–û–í–ê–ù–ï –ó–ê–í–î–ê–ù–ù–Ø ‚Ññ3 . –¢–£–¢ –ü–†–û–°–¢–û –ù–ï –ó–ù–ê–í –ö–£–î–ê –í–õ–Ü–ü–ò–¢–ò –¢–Ü –¢–û–ì–õ–ò –Ü –ü–Ü–ö–ï–†–ò)
    
    
}
// Present the view controller in the Live View window
PlaygroundPage.current.liveView = MyViewController()



//UILABEL
////: A UIKit based Playground for presenting user interface
//
//import UIKit
//import PlaygroundSupport
//
//class MyViewController : UIViewController {
//    override func loadView() {
//        let view = UIView()
//        view.backgroundColor = .lightGray
//
//        let label = UILabel()
//        label.frame = CGRect(x: 150, y: 200, width: 100, height: 20)
//        label.text = "Hello World!"
//        label.textColor = .black
//        label.backgroundColor = .red
//        label.textAlignment = .center
//        label.font = UIFont.systemFont(ofSize: 22, weight: .bold)
//        label.lineBreakMode = .byTruncatingMiddle
//
//        view.addSubview(label)
//        self.view = view
//    }
//}
//// Present the view controller in the Live View window
//PlaygroundPage.current.liveView = MyViewController()

//Subviews and views
////: A UIKit based Playground for presenting user interface
//
//import UIKit
//import PlaygroundSupport
//
//class MyViewController : UIViewController {
//    override func loadView() {
//        let view = UIView()
//        view.backgroundColor = .lightGray
//
//        let myView = UIView()
//        myView.frame = CGRect(x: 10, y: 20, width: 100, height: 100)
//        myView.backgroundColor = .white
//        myView.layer.cornerRadius = 50
//
//        let myView2 = UIView()
//        myView2.frame = CGRect(x: 20, y: 60, width: 20, height: 20)
//        myView2.backgroundColor = .blue
//        myView2.layer.cornerRadius = 10
//
//        myView.addSubview(myView2)
//
//
//        view.addSubview(myView)
//        self.view = view
//    }
//}
//// Present the view controller in the Live View window
//PlaygroundPage.current.liveView = MyViewController()


//UIButton

//: A UIKit based Playground for presenting user interface
  
//import UIKit
//import PlaygroundSupport
//
//class MyViewController : UIViewController {
//    override func loadView() {
//        let view = UIView()
//        view.backgroundColor = .lightGray
//
//        let myButton = UIButton()
//        myButton.frame = CGRect(x: 10, y: 50, width: 120, height: 44)
//        myButton.setTitle("Go", for: .normal)
//        myButton.layer.cornerRadius = 22
//        myButton.backgroundColor = .magenta
//
//        myButton.addTarget(self, action: #selector(buttonClicked), for: .touchUpInside)
//
//        myButton.isUserInteractionEnabled = true
//
//
//        view.addSubview(myButton)
//        self.view = view
//    }
//
//    @objc func buttonClicked() {
//        print("Button clicked!")
//    }
//}
//// Present the view controller in the Live View window
//PlaygroundPage.current.liveView = MyViewController()
